#!/bin/bash -ex
# we should always set proper ownership before exiting, otherwise
# the created packages will have root:root ownership and we'll be unable
# to delete them from our host.
trap 'chown -R --reference /build-inside/build-package /out/' EXIT

virtualenv ${INSTALL_DIR}

# create the ourcms user; it's easier to chown here rather than manually set the ownership later on.
/build-inside/before-install-and-upgrade

cd ${INSTALL_DIR}
rsync -a /source/* .
chown -R ourcms:nogroup state
mv ourcms/ourcms/settings.py /etc/ourcms-settings.py
ln -s /etc/ourcms-settings.py ourcms/ourcms/settings.py

${INSTALL_DIR}/bin/pip install -r /source/ourcms/requirements.txt
source bin/activate
cd ourcms
python manage.py collectstatic --noinput

pip install uwsgi
cd /build-inside/root
find -type f -exec install -D {} /{} \;

cd /out
# build the main ourcms deb
fpm -t deb -s dir -n ourcms --version ${VERSION} --iteration ${BUILD_NUMBER} --description "my cms ${GIT_COMMIT}" --deb-use-file-permissions --deb-no-default-config-files --before-install /build-inside/before-install-and-upgrade --before-upgrade /build-inside/before-install-and-upgrade --before-remove /build-inside/before-remove --after-remove /build-inside/after-remove --after-upgrade /build-inside/after-upgrade --depends python --depends libpython2.7 --depends libjpeg8 --depends zlib1g --config-files /opt/ourcms/state --config-files /etc/ourcms-settings.py -C / /opt /etc/init/ourcms.conf /etc/ourcms-settings.py

# then build the optional dependency between ourcms and nginx
fpm -t deb -s dir -n ourcms-nginx --version ${VERSION} --iteration ${BUILD_NUMBER} --description "nginx config for ourcms ${GIT_COMMIT}" --deb-use-file-permissions --deb-no-default-config-files --depends "ourcms = ${VERSION}-${BUILD_NUMBER}" --depends nginx -C / /etc/nginx/sites-enabled/ourcms
